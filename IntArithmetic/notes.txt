unsigned int 2^32 max. 0<= n <= (2^32) - 1

entero grande, sea una lista en la que cada elemento sea un entero de tamaño 2^16 (Así al multiplicar dos, el resultado no desbordará al entero de 2^32)
También se puede jugar con entero y entero largo... dependiendo del lenguaje y compilador.


Objetivo de la práctica es comparar ordenes de tiempo (Generar gráficas de comparación). Necesitamos poder introducir enteros manualmente.

Hay que implementar sumas (Mult. Escolar) y restas (Mult. Karatsuba)
Memoria (3,4 pág.) destacar dific. facilidades, la gráfica, explicación del algoritmo si se hacen mejoras...

Implementar mult naturales, no enteros. En Karatsuba hay que restar, tener en cuenta que pueden aparecer signos.

El cambio de base no se cuenta en la medición de tiempo a comparar.



http://www.mathsisfun.com/binary-decimal-hexadecimal-converter.html

---------------------------------------------------------------------
Cosas buenas:
* Karatsuba tira para positivos perfectamente.

Fallos detectados:
* No se leen bien entradas negativas. Se leen con signo menos, pero isNegative a false.
* Hay que unificar este criterio. Cuando tiene isNegative a true, y signo menos en el digito lo trata como positivo. Cuando tiene signo negativo e isNegative a false lo trata como negativo...
* Me estoy haciendo un lio debido a esto último y me cuesta horrores llegar a un Karatsuba funcional.
* La resta falla si se intenta restar (0 - x) y el BigInt que contiene 0 tiene size() > 1. HE TENIDO QUE PARCHAERLO EN KARATSUBA CON UNA FUNCION. PERO ME GUSTARIA QUITARLA.
* Necesito que el signo del 0 no importe en las restas, sumas y multiplicaciones.
* Intenta solucionarme estas cosas lo antes posible por favor.

